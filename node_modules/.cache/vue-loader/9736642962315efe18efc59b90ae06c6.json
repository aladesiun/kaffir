{"remainingRequest":"C:\\Users\\USER\\newkaffir\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\USER\\newkaffir\\src\\components\\public\\home.vue?vue&type=template&id=2a276f36&scoped=true&","dependencies":[{"path":"C:\\Users\\USER\\newkaffir\\src\\components\\public\\home.vue","mtime":1636927425057},{"path":"C:\\Users\\USER\\newkaffir\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\newkaffir\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\USER\\newkaffir\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\newkaffir\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgIDxkaXY+CiAgICA8ZGl2IGNsYXNzPSJyb3cgaHJyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIgcC0wIG10LTUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgcHQtNSB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIgaW1nLXNlYy1zbSI+CiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii4uLy4uL2Fzc2V0cy9pbWcvZnMxLnBuZyIgYWx0PSIiIGNsYXNzPSJpbWctZmx1aWQiIC8+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBoZXJvIG10LTUiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTcgY29sLW1kLTEyIj4KICAgICAgICAgICAgICAgICAgICA8aDE+U2VuZCBhbm9ueW1vdXMgbWVzc2FnZXMgdG8geW91ciBmcmllbmRzIG9ubGluZS48L2gxPgogICAgICAgICAgICAgICAgICAgIDwhLS0gPHAgY2xhc3M9InB0dCI+a25vdyB3aGF0IHBlb3BsZSB0aGluayBhYm91dCwgc3RhcnQgdGhlIGpvdXJuZXkgYnkgY2xpY2tpbmcgYW55IG9mIHRoZSBib3R0b24gYmVsb3c8L3A+IC0tPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxrbnMiPgogICAgICAgICAgICAgICAgICAgICAgICA8cm91dGVyLWxpbmsgY2xhc3M9InNpZ24tYnRuIiB0bz0iL3JlZ2lzdGVyIiB0YWJpbmRleD0iLTEiIGFyaWEtZGlzYWJsZWQ9InRydWUiPnNpZ24gdXA8L3JvdXRlci1saW5rPgogICAgICAgICAgICAgICAgICAgICAgICA8cm91dGVyLWxpbmsgY2xhc3M9InNpZ24tYnRuIHRvbG9nIiB0bz0iL2xvZ2luIiB0YWJpbmRleD0iLTEiIGFyaWEtZGlzYWJsZWQ9InRydWUiIHN0eWxlPSIiPmxvZyBpbjwvcm91dGVyLWxpbms+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC01IGltZy1zZWMiPgogICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIuLi8uLi9hc3NldHMvaW1nL2ZzMS5wbmciIGFsdD0iIiBjbGFzcz0iaW1nLWZsdWlkIiAvPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8IS0tIGNhcm91c2VsIC0tPgogICAgPHNlY3Rpb24gY2xhc3M9ImNhcmRzLXNlY3Rpb24iPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci14bCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImhlYWQteSB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICA8aDI+d2h5IHlvdSBtdXN0IGpvaW4gdGhlIHNvY2lldHk8L2gyPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBpZD0iYWJvdXQiIGNsYXNzPSJjYXJkLXJvdyBncmlkLXNsaWRlci13cmFwIGNhcm91c2VsIHAtMCIgZGF0YS1mbGlja2l0eT0neyAid3JhcEFyb3VuZCI6IHRydWUgfSc+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncmlkLXNsaWRlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkcyBiYiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24tY29udCBpY29uLWJiIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24tbWFpbiBpY29uLWJiLW1haW4iPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGgxPnNhZmUgYW5kIHNlY3VyZTwvaDE+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwPlNhZmV0eSBPZiBPdXIgVXNlcnMgVXNpbmcgVGhpcyBBbm9ueW1vdXMgTWVzc2FnaW5nIFBsYXRmb3JtIElzIFZlcnkgSW1wb3J0YW50IHRvIFVzLiBXZSBIYXZlIEdvdCBSZXBvcnRpbmcgU3lzdGVtcyBTbyBUaGF0IFlvdSBDYW4gUmVwb3J0IEFueXRoaW5nIFRoYXQgWW91IERvIE5vdCBMaWtlIFRvIFNlZS48L3A+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdyaWQtc2xpZGUiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmRzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbi1jb250Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24tbWFpbiI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8aDE+MjcvNDwvaDE+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwPklmIFRoZXJlIElzIEFueXRoaW5nIFRoYXQgWW91IE5lZWQgSGVscCBXaXRoIFJlbGF0ZWQgVG8gT3VyIEFub255bW91cyBNZXNzYWdpbmcgQW5kIEZlZWRiYWNrIFBsYXRmb3JtLCBXZSBBcmUgQWx3YXlzIEhlcmUgRm9yIFlvdS4gMjQgSG91cnMgQSBEYXkgQW5kIDcgRGF5cyBBIFdlZWsuPC9wPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncmlkLXNsaWRlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkcyBiYiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24tY29udCBpY29uLWJiIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24tbWFpbiBpY29uLWJiLW1haW4iPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGgxPkFkdmFuY2UgRmVhdHVyZXM8L2gxPgogICAgICAgICAgICAgICAgICAgICAgICA8cD5sYXRlciBpbiB0aGUgZnV0dXJlIHlvdSB3aWxsIGJlIGFibGUgdG8gY3JlYXRlIGEgZ3JvdXAgY2hhdCBhbmQgZXZlbiBzZW5kIGEgdm9pY2UgcmVjb3JkIGFuZCBzaGFyZSBmaWxlcyA8L3A+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdyaWQtc2xpZGUiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmRzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbi1jb250Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24tbWFpbiI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8aDE+MjcvNDwvaDE+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwPklmIFRoZXJlIElzIEFueXRoaW5nIFRoYXQgWW91IE5lZWQgSGVscCBXaXRoIFJlbGF0ZWQgVG8gT3VyIEFub255bW91cyBNZXNzYWdpbmcgQW5kIEZlZWRiYWNrIFBsYXRmb3JtLCBXZSBBcmUgQWx3YXlzIEhlcmUgRm9yIFlvdS4gMjQgSG91cnMgQSBEYXkgQW5kIDcgRGF5cyBBIFdlZWsuPC9wPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncmlkLXNsaWRlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkcyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24tY29udCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpY29uLW1haW4iPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGgxPkFub25pbWl0eTwvaDE+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwPk91ciBQbGF0Zm9ybSBFbnN1cmVzIFlvdXIgUHJpdmFjeSBTbyBUaGF0IFlvdSBTdGF5IEFub255bW91cyBFdmVyeXRpbWUgWW91IFNlbmQgU29tZW9uZSBBIFNlY3JldCBNZXNzYWdlLjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSA8ZGl2IGNsYXNzPSJtb2RhbCBmYWRlIiBpZD0iZXhhbXBsZU1vZGFsIiB0YWJpbmRleD0iLTEiIGFyaWEtbGFiZWxsZWRieT0iZXhhbXBsZU1vZGFsTGFiZWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9Im1vZGFsLXRpdGxlIiBpZD0iZXhhbXBsZU1vZGFsTGFiZWwiPkFub25pbWl0eTwvaDU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvIiBjbGFzcz0iYnRuLWNsb3NlIiBkYXRhLWJzLWRpc21pc3M9Im1vZGFsIiBhcmlhLWxhYmVsPSJDbG9zZSI+PC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1iLTMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJyZWNpcGllbnQtbmFtZSIgY2xhc3M9ImNvbC1mb3JtLWxhYmVsIj5SZWNpcGllbnQ6PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJyZWNpcGllbnQtbmFtZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Im1lc3NhZ2UtdGV4dCIgY2xhc3M9ImNvbC1mb3JtLWxhYmVsIj5NZXNzYWdlOjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0ibWVzc2FnZS10ZXh0Ij48L3RleHRhcmVhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZm9vdGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tc2Vjb25kYXJ5IGRvbmUiIGRhdGEtYnMtZGlzbWlzcz0ibW9kYWwiPkRvbmU8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gLS0+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L3NlY3Rpb24+CiAgICA8IS0tIGZvbGxvdyB1cyAtLT4KICAgIAogICAgPCEtLSBGQVEgLS0+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIteGwgZmFxIG10LTQiPgogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02Ij4KICAgICAgICAgICAgICAgIDxoMSBjbGFzcz0ibWItMyI+RnJlcXVlbnRseSBhc2tlZCBxdWVzdGlvbnM8L2gxPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXNrLXRhYiBtYi0yIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93biBkLWZsZXgiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpLWNvbnQiIGRhdGEtbWRiLXRvZ2dsZT0iY29sbGFwc2UiIGRhdGEtbWRiLXRhcmdldD0iI2NvbGxhcHNlT25lIiBhcmlhLWV4cGFuZGVkPSJ0cnVlIiBhcmlhLWNvbnRyb2xzPSJjb2xsYXBzZU9uZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXBsdXMiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwPkhvdyBkbyBJIGtub3cgSSB3aWxsIGJlIGFub255bW91czwvcD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJjb2xsYXBzZU9uZSIgY2xhc3M9ImFjY29yZGlvbi1jb2xsYXBzZSBjb2xsYXBzZSBzaG93IiBhcmlhLWxhYmVsbGVkYnk9ImhlYWRpbmdPbmUiIGRhdGEtbWRiLXBhcmVudD0iI2FjY29yZGlvbkV4YW1wbGUiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhY2NvcmRpb24tYm9keSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5Zb3Ugd2lsbCBzdXJlbHkga25vdyB5b3UgYXJlIGFub255bW91cyBhbGwgdXNlcnMgYXJlIGp1c3QgZ2l2ZW4gYSBnZW5lcmljIGNvZGVkIG5vIHRoYXQgYXJlIGdlbmVyYXRlZCBmcm9tIHRoZSBzZXJ2ZXIgbm90IGV2ZW4ga25vd24gdG8gdXMuIFRoZXJlZm9yZSB3ZSBhc3N1cmUgeW91IG9mIGFub25vbnltaXR5IDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFzay10YWIiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duIGQtZmxleCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImktY29udCIgZGF0YS1tZGItdG9nZ2xlPSJjb2xsYXBzZSIgZGF0YS1tZGItdGFyZ2V0PSIjY29sbGFwc2V0d28iIGFyaWEtZXhwYW5kZWQ9InRydWUiIGFyaWEtY29udHJvbHM9ImNvbGxhcHNlT25lIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtcGx1cyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPHA+aWYgaSBzZW5kIGEgdm9pY2Ugd29uJ3QgaSBiZSBkZXRlY3RlZDwvcD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJjb2xsYXBzZXR3byIgY2xhc3M9ImFjY29yZGlvbi1jb2xsYXBzZSBjb2xsYXBzZSIgYXJpYS1sYWJlbGxlZGJ5PSJoZWFkaW5nT25lIiBkYXRhLW1kYi1wYXJlbnQ9IiNhY2NvcmRpb25FeGFtcGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWNjb3JkaW9uLWJvZHkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+eW91IGNhbiBub3QgYmUgZGV0ZWN0ZWQgaWYgeW91IHVzZSBvdXIgdm9pY2Vub3RlIGJlY2F1c2UgYWZ0ZXIgeW91ciB2b2ljZSBoYXMgYmUgcmVjb3JkZWQgeW91IHdpbGwgYmUgYXNrIHRvIGNob29zZSBhIHJvYm90aWMgdm9pY2UgdGhhdCBkaXNndWlzZSB5b3VyIHZvaWNlIGZyb20gYmVlbiBkZXRlY3RlZCBpdHMgeW91PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSA8cD5Zb3Ugd2lsbCBzdXJlbHkga25vdyB5b3UgYXJlIGFub255bW91cyBhbGwgdXNlcnMgYXJlIGp1c3QgZ2l2ZW4gYSBnZW5lcmljIGNvZGVkIG5vIHRoYXQgYXJlIGdlbmVyYXRlZCBmcm9tIHRoZSBzZXJ2ZXIgbm90IGV2ZW4ga25vd24gdG8gdXMuIFRoZXJlZm9yZSB3ZSBhc3N1cmUgeW91IG9mIGFub25vbnltaXR5PC9wPiAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFzay10YWIiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duIGQtZmxleCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImktY29udCIgZGF0YS1tZGItdG9nZ2xlPSJjb2xsYXBzZSIgZGF0YS1tZGItdGFyZ2V0PSIjY29sbGFwc2V0aHJlZSIgYXJpYS1leHBhbmRlZD0idHJ1ZSIgYXJpYS1jb250cm9scz0iY29sbGFwc2VPbmUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1wbHVzIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8cD5jYW4gaSBjcmVhdGUgYSByb29tPC9wPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImNvbGxhcHNldGhyZWUiIGNsYXNzPSJhY2NvcmRpb24tY29sbGFwc2UgY29sbGFwc2UiIGFyaWEtbGFiZWxsZWRieT0iaGVhZGluZ09uZSIgZGF0YS1tZGItcGFyZW50PSIjYWNjb3JkaW9uRXhhbXBsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFjY29yZGlvbi1ib2R5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPmRlZmluaWV0bHkgeW91IGNhbiBjcmVhdGUgYSByb29tLCBFdmVyeSB1c2VyIGlzIGVudGl0bGVkIHRvIGNyZWF0ZSBhIHJvb20vZ3JvdXAgY2hhdCBmb3IgZnJpZW5kcyBhbmQgZmFtaWx5PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSA8cD5Zb3Ugd2lsbCBzdXJlbHkga25vdyB5b3UgYXJlIGFub255bW91cyBhbGwgdXNlcnMgYXJlIGp1c3QgZ2l2ZW4gYSBnZW5lcmljIGNvZGVkIG5vIHRoYXQgYXJlIGdlbmVyYXRlZCBmcm9tIHRoZSBzZXJ2ZXIgbm90IGV2ZW4ga25vd24gdG8gdXMuIFRoZXJlZm9yZSB3ZSBhc3N1cmUgeW91IG9mIGFub25vbnltaXR5PC9wPiAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFzay10YWIiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duIGQtZmxleCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImktY29udCIgZGF0YS1tZGItdG9nZ2xlPSJjb2xsYXBzZSIgZGF0YS1tZGItdGFyZ2V0PSIjY29sbGFwc2Vmb3VyIiBhcmlhLWV4cGFuZGVkPSJ0cnVlIiBhcmlhLWNvbnRyb2xzPSJjb2xsYXBzZU9uZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXBsdXMiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwPndoYXQgaWYgaSBhbSBvZmZlbmRlZDwvcD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJjb2xsYXBzZWZvdXIiIGNsYXNzPSJhY2NvcmRpb24tY29sbGFwc2UgY29sbGFwc2UiIGFyaWEtbGFiZWxsZWRieT0iaGVhZGluZ09uZSIgZGF0YS1tZGItcGFyZW50PSIjYWNjb3JkaW9uRXhhbXBsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFjY29yZGlvbi1ib2R5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPmlmIHlvdSBhcmUgb2ZmZW5kZWQgYnkgd2hhdCBhIHVzZXIgc2VudCB5b3UgY2FuIHNlbmQgcmVwb3J0IHRoZSB1c2VyIGluIHRoZSByZXBvcnQgc2VjdGlvbjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPHA+WW91IHdpbGwgc3VyZWx5IGtub3cgeW91IGFyZSBhbm9ueW1vdXMgYWxsIHVzZXJzIGFyZSBqdXN0IGdpdmVuIGEgZ2VuZXJpYyBjb2RlZCBubyB0aGF0IGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgc2VydmVyIG5vdCBldmVuIGtub3duIHRvIHVzLiBUaGVyZWZvcmUgd2UgYXNzdXJlIHlvdSBvZiBhbm9ub255bWl0eTwvcD4gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNiBmYXEtaW1nLXNlYyI+CiAgICAgICAgICAgICAgICA8aW1nIHNyYz0iLi4vLi4vYXNzZXRzL2ltZy9hc2sucG5nIiBhbHQ9IiIgY2xhc3M9ImltZy1mbHVpZCIgLz4KICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIuLi8uLi9hc3NldHMvaW1nL2Fzc2V0MS5wbmciIGFsdD0iIiBjbGFzcz0iYXN0IiAvPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICA8Zm9vdGVyIGNsYXNzPSJmb290ZXItYXJlYSBwXzMwIj4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgPGRpdiBjbGFzcz0icm93IGZvb3Rlci1ib3R0b20gZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGFsaWduLWl0ZW1zLWNlbnRlciI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJjb2wtbGctOCBjb2wtbWQtOCBmb290ZXItdGV4dCBtLTAiPgogICAgICAgICAgICAgICAgQ29weXJpZ2h0IMKpIDIwMjEgLSBrYWZmaXIgPGI+fDwvYj4gCiAgICAgICAgICAgICAgICA8YnIgLz4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9mb290ZXI+Cgo8L2Rpdj4KCg=="},null]}